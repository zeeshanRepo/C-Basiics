Step 1: Start with a relatable analogy

Say this:

“Imagine you are cooking. Every time you make tea, you follow the same steps — boil water, add tea powder, sugar, and milk.
Instead of repeating this daily, you can just write the recipe once and reuse it whenever you need tea.
In C++, a function is just like that recipe — a reusable block of code that performs a specific task.”

Step 2: Define it simply
A function in C++ is a group of statements that performs a specific task and can be reused anywhere in the program.

Step 3: Explain the importance
1.Reusability – Write once, use many times.
2.Readability – Code becomes easier to read and understand.
3.Debugging – Errors are easier to find since each function is small and focused.
4.Modularity – Large programs are divided into smaller parts.
5.Collaboration – Multiple people can work on different functions of the same program.



Step 4: simple example
#include <iostream>
using namespace std;

// Function definition
void greet() {
    cout << "Hello, welcome to C++!" << endl;
}

int main() {
    greet();  // Function call
    return 0;
}

Step 5: Difference between built-in and user-defined functions
Type	Example	Description
Built-in	sqrt(), pow(),cout , cin	Already available in C++ libraries
User-defined	greet()	Created by you for specific tasks

Step 6: Introduce functions with parameters & return values
#include <iostream>
using namespace std;

int add(int a, int b) {
    return a + b;
}

int main() {
    int result = add(5, 3);
    cout << "Sum is: " << result << endl;
    return 0;
}



